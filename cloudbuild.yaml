steps:
# Step 1: Delete Docker Images
- name: 'google/cloud-sdk:latest'
  id: 'Delete Docker Images'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -x  # Enable debugging
      echo "Deleting Docker images from Google Container Registry..."
      # Delete Docker image
      IMAGE="gcr.io/velvety-accord-430502-f0/python-app1:latest"
      if gcloud container images list --format='get(uri)' | grep -q "$IMAGE"; then
        if gcloud container images delete "$IMAGE" --force-delete-tags --quiet; then
          echo "Successfully deleted Docker image: $IMAGE"
        else
          echo "Failed to delete Docker image: $IMAGE"
          exit 1
        fi
      else
        echo "Docker image not found: $IMAGE"
      fi

# Step 2: Delete Deployment Configurations
- name: 'google/cloud-sdk:latest'
  id: 'Delete Deployment Configurations'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -x  # Enable debugging
      echo "Deleting deployment resources..."
      DELIVERY_PIPELINE="gke-cicd-pipeline"
      REGION="us-central1"
      
      # Delete deployment releases
      if gcloud deploy releases list --delivery-pipeline=$DELIVERY_PIPELINE --region=$REGION --format='value(name)' | grep -q .; then
        if gcloud deploy releases delete --delivery-pipeline=$DELIVERY_PIPELINE --region=$REGION --quiet; then
          echo "Successfully deleted deployment releases"
        else
          echo "Failed to delete deployment releases"
          exit 1
        fi
      else
        echo "No deployment releases found for pipeline: $DELIVERY_PIPELINE"
      fi
      
      # Delete pipeline configurations
      CONFIG_FILES=("deploy/pipeline.yaml" "deploy/dev.yaml")
      for FILE in "${CONFIG_FILES[@]}"; do
        if [ -f "$FILE" ]; then
          if gcloud deploy apply --file "$FILE" --region=$REGION --delete; then
            echo "Successfully deleted configuration: $FILE"
          else
            echo "Failed to delete configuration: $FILE"
            exit 1
          fi
        else
          echo "Configuration file not found: $FILE"
        fi
      done

# Optional Step: Clean Up Additional Resources
- name: 'google/cloud-sdk:latest'
  id: 'Clean Up Additional Resources'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      set -x  # Enable debugging
      echo "Performing additional clean-up tasks..."
      # Example: Delete Cloud Storage buckets
      BUCKETS=("bucket1" "bucket2")
      for BUCKET in "${BUCKETS[@]}"; do
        if gsutil ls -b "gs://$BUCKET" >/dev/null 2>&1; then
          if gsutil rm -r "gs://$BUCKET"; then
            echo "Successfully deleted bucket: $BUCKET"
          else
            echo "Failed to delete bucket: $BUCKET"
            exit 1
          fi
        else
          echo "Bucket not found: $BUCKET"
        fi
      done
  waitFor: ['Delete Deployment Configurations']

options:
  logging: CLOUD_LOGGING_ONLY
